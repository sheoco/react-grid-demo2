{"version":3,"sources":["logo.svg","myComponent.js","myMuuriGrid.js","CustomMuuriGrid.js","NewGridMuuri.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ResizableWrapper2","props","ref","useRef","refresh","useRefresh","refreshWithdebounce","debounce","requestAnimationFrame","className","style","width","height","animation_class","minConstraints","onResize","_","size","current","zIndex","onResizeStop","color","id","text","onClick","remove","data-toggle","data-target","Demo","children","Component","ResizableWrapper","NewGridMuuri","addItem","setState","items","state","itemsCount","onFormFieldChangeHandler","event","target","name","value","onAddItemHandler","box_content","box_width","box_height","content","parseInt","box_color","loc","box_loc","newData","slice","splice","alert","preventDefault","onRemoveItemHandler","arr","item_index","i","length","confirm_id","setTimeout","filter","it","onFilterItemHandler","box_color_filter","filterReference","initialItems","bind","this","map","item","index","key","borderRight","av_item","padding","borderBottom","class","onChange","dragEnabled","dragStartPredicate","handle","propsToData","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","React","Item","no_item","array","item_arr","Math","floor","random","push","AddItemOnLocation","background","onSubmit","placeholder","required","min","max","tooltip","flow","Navbar","aria-controls","aria-expanded","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a052de1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useRef } from \"react\";\r\nimport { useRefresh } from \"muuri-react\";\r\nimport { ResizableBox } from \"react-resizable\";\r\nimport { debounce } from \"underscore\";\r\n\r\n// Item component.\r\nexport const ResizableWrapper = (Component, { width, height }) => {\r\n  // Return the wrapped resizable component.\r\n  return function WrappedComponent(props) {\r\n    // Muuri-react provides all the tools to manage scaling.\r\n    // You can implement it however you want.\r\n    const ref = useRef();\r\n    const refresh = useRefresh();\r\n    // Get the best performance with debouncing.\r\n    // It is not mandatory to use.\r\n    const refreshWithdebounce = debounce(\r\n      () => requestAnimationFrame(refresh),\r\n      50\r\n    );\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className=\"item\"\r\n        style={{ width: `${width}px`, height: `${height}px` }}\r\n      >\r\n        <div className=\"muuri-item\">\r\n          {/* React-resizable is used to handle the resizing. */}\r\n          <ResizableBox\r\n            width={width}\r\n            height={height}\r\n            minConstraints={[width, height]}\r\n            onResize={(_, { size }) => {\r\n              ref.current.style.width = size.width + \"px\";\r\n              ref.current.style.height = size.height + \"px\";\r\n\r\n              refreshWithdebounce();\r\n            }}\r\n          >\r\n            <Component {...props} />\r\n          </ResizableBox>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ResizableWrapper2=(props)=>{\r\n    {\r\n        // Return the wrapped resizable component.\r\n        return function WrappedComponent(props) {\r\n          // Muuri-react provides all the tools to manage scaling.\r\n          // You can implement it however you want.\r\n          const ref = useRef();\r\n          const refresh = useRefresh();\r\n          // Get the best performance with debouncing.\r\n          // It is not mandatory to use.\r\n          const refreshWithdebounce = debounce(\r\n            () => requestAnimationFrame(refresh),\r\n            50\r\n          );\r\n      \r\n          return (\r\n            <div\r\n              ref={ref}\r\n              className=\"item \"\r\n              style={{ width: `${props.width}px`, height: `${props.height}px`}}\r\n\r\n            >\r\n              <div className={`muuri-item ${props.animation_class}`}>\r\n                {/* React-resizable is used to handle the resizing. */}\r\n                <ResizableBox\r\n                  width={props.width}\r\n                  height={props.height}\r\n                  minConstraints={[100, 100]}\r\n                  onResize={(_, { size }) => {\r\n                    ref.current.style.width = size.width + \"px\";\r\n                    ref.current.style.height = size.height + \"px\";\r\n                    ref.current.style.zIndex = 3;\r\n                    \r\n\r\n                    refreshWithdebounce();\r\n                  }}\r\n                  onResizeStop={(_)=>{\r\n                    ref.current.style.zIndex = '';\r\n                  }}\r\n\r\n                >\r\n                    <div className={`content ${props.color}`}>\r\n                      <div className=\"content-header\" >Card {props.id+1} </div>\r\n                  \r\n                      <div className=\"div_center\">\r\n                        <p className=\"div_center_content\">{props.text}</p>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <span className=\"removeSpan\"  onClick={props.remove} data-toggle=\"modal\" data-target=\"#exampleModal\">X</span>\r\n                \r\n                </ResizableBox>\r\n              </div>\r\n            </div>\r\n          );\r\n        };\r\n      };\r\n      \r\n  } \r\n\r\n\r\n\r\n\r\n\r\n\r\n// Header component.\r\nexport const Header = () => (\r\n  <React.Fragment>\r\n    <h2 className=\"section-title\">\r\n      <span>React Grid Demo</span>\r\n    </h2>\r\n    <h4 className=\"section-title\">\r\n      <div>\r\n        <h4>Resize the boxes</h4>\r\n      </div>\r\n    </h4>\r\n    <div className=\"controls cf\" />\r\n  </React.Fragment>\r\n);\r\n\r\n// Demo component.\r\nexport const Demo = ({ children }) => (\r\n  <section className=\"grid-demo\">{children}</section>\r\n);\r\n\r\n// Button component.\r\nexport const Button = ({ onClick }) => (\r\n  <button className=\"add-more-items btn btn-primary\" onClick={onClick}>\r\n    <i className=\"material-icons\">&#xE145;</i>\r\n    Add more items at end\r\n  </button>\r\n);\r\n\r\n// Footer component.\r\nexport const Footer = ({ children }) => (\r\n  <div className=\"grid-footer\">{children}</div>\r\n);\r\n","/* React */\r\nimport React, { useState } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n/* Muuri-react */\r\nimport { MuuriComponent } from \"muuri-react\";\r\n/* Utils & components */\r\nimport { Header, Demo, Footer, Button, ResizableWrapper } from \"./myComponent\";\r\nimport { generateItems } from \"./utils\";\r\n/* Style */\r\n\r\n\r\n// App.\r\nconst MyMuuriGrid = () => {\r\n  const [items, setItems] = useState(generateItems());\r\n\r\n  // Children.\r\n  const children = items.map(({ id, color }) => (\r\n    <Item \r\n      key={id} \r\n      color={color} \r\n      \r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Demo>\r\n      {/* Header */}\r\n      <Header />\r\n      {/* Content */}\r\n      <MuuriComponent\r\n        dragEnabled\r\n        dragStartPredicate={{ handle: \".content-header\" }}\r\n      >\r\n        {children}\r\n      </MuuriComponent>\r\n      {/* Footer */}\r\n      <Footer>\r\n        <Button onClick={() => setItems(items.concat(generateItems()))} />\r\n      </Footer>\r\n    </Demo>\r\n  );\r\n};\r\n\r\n// Item component.\r\nconst Item = ResizableWrapper(\r\n  ({ color,id }) => (\r\n    <div className={`content ${color}`}>\r\n      <div className=\"content-header\" />\r\n    </div>\r\n  ),\r\n  {\r\n    width: 200,\r\n    height: 100\r\n  }\r\n);\r\n\r\nexport default MyMuuriGrid;\r\n","import React, { useState } from \"react\";\r\nimport { MuuriComponent } from \"muuri-react\";\r\nimport { Header, Demo, Footer, Button, ResizableWrapper,ResizableWrapper2 } from \"./myComponent\";\r\n\r\n\r\n\r\n\r\nconst CustomMuuriGrid = ()=>{\r\n\r\n\r\n  const initialItems = (no_item) =>{\r\n    const items = [];\r\n    for (let i = 0; i < no_item; i++) {\r\n  \r\n        items.push( {id:i,color:\"blue\",width:200,height:200,text:'drag me!'});\r\n    }\r\n    return items\r\n    \r\n  }\r\n  \r\n  \r\n  const addItem = ()=> {\r\n    \r\n        setItems([...items, {id:itemsCount,color:\"blue\",width:200,height:200,text:'drag me!'}])\r\n        setItemsCount(itemsCount+1)\r\n  }\r\n      \r\n  const removeItem = (id) => {\r\n    alert('');\r\n     // setItems(items.filter(item => item.id !== id))\r\n      \r\n  }\r\n\r\n    const [items, setItems] = useState(initialItems(10));\r\n    const [itemsCount, setItemsCount] = useState(10);\r\n\r\n    // Children.\r\n    const children = items.map((item) => (\r\n      <Item\r\n          key={item.id}\r\n          color={item.color}\r\n          id={item.id}\r\n          width={item.width}\r\n          height={item.height}\r\n          text={item.text}\r\n          remove = {removeItem(item.id)}\r\n        />\r\n    ));\r\n\r\n\r\n        return <Demo>\r\n                    <Header />\r\n                    <MuuriComponent\r\n                        dragEnabled\r\n                        dragStartPredicate={{ handle: \".content-header\" }}\r\n                    >\r\n                    {children}\r\n                    </MuuriComponent>\r\n        \r\n                    <Footer>\r\n                    <Button onClick={addItem} />\r\n                    </Footer>\r\n                </Demo>\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n// Item component.\r\nconst Item= ResizableWrapper2();\r\n     \r\n\r\n\r\n\r\nconst AddCard = (props)=>{\r\n\r\n    var div_style={\r\n        background: '#fff',\r\n        padding:10,\r\n        \r\n    }\r\n\r\n    var str =<><br/>\r\n        <div style={div_style}>\r\n            <h5>Add New Card</h5>\r\n            <hr/>\r\n          <form onSubmit={props.onAddItemHandler}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Text of card</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"box_content\" placeholder=\"Enter box text..\" onChange={props.onFormFieldChangeHandler} required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Y Axis of card (Row)</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_row\" placeholder=\"Enter y axis (Row)\"  onChange={props.onFormFieldChangeHandler} min=\"0\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">X Axis of card (Column)</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_col\" placeholder=\"Enter x axis (Col)\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"12\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Width of card</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_width\" placeholder=\"Enter width\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"12\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Height of card </label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_height\" placeholder=\"Enter height\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"6\" required/>\r\n                 </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-primary btn-block\">Add Crad !</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n\r\n    return str\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  \r\nexport default CustomMuuriGrid;","import React from \"react\";\r\nimport { MuuriComponent } from \"muuri-react\";\r\nimport { Header, Demo, Footer, Button, ResizableWrapper,ResizableWrapper2 } from \"./myComponent\";\r\n\r\n\r\nclass NewGridMuuri extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n                items:initialItems(10),\r\n                itemsCount:10,\r\n                box_content:'',\r\n                box_loc:'',\r\n                box_width:'',\r\n                box_height:'',\r\n                box_color:'orange',\r\n                confirm_id:0,\r\n                box_color_filter:'all',\r\n        }\r\n\r\n \r\n        this.addItem = this.addItem.bind(this)\r\n\r\n        this.onFormFieldChangeHandler = this.onFormFieldChangeHandler.bind(this)\r\n        this.onAddItemHandler = this.onAddItemHandler.bind(this)\r\n        this.onRemoveItemHandler = this.onRemoveItemHandler.bind(this)\r\n        this.onFilterItemHandler = this.onFilterItemHandler.bind(this)\r\n        this.filterReference =this.filterReference.bind(this)\r\n    }\r\n\r\n    addItem = ()=> {\r\n    \r\n        this.setState({\r\n            items: [...this.state.items, {id:this.state.itemsCount,color:\"blue\",width:200,height:200,text:'drag me!'}]\r\n        })\r\n            \r\n        this.setState({itemsCount:this.state.itemsCount+1})\r\n        \r\n    }\r\n\r\n    onFormFieldChangeHandler = (event)=>{\r\n        \r\n        const target = event.target;\r\n        this.setState({\r\n\t\t\t[target.name]:target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onAddItemHandler = (event)=>{\r\n\r\n        if(this.state.box_content !=='' && this.state.box_width !=='' && this.state.box_height !=='')\r\n        {\r\n            const content = this.state.box_content\r\n            const width = parseInt(this.state.box_width)\r\n            const height = parseInt(this.state.box_height)\r\n            const color = this.state.box_color\r\n            var loc = this.state.itemsCount\r\n            if(this.state.box_loc!=\"\"){\r\n                 var box_loc = parseInt(this.state.box_loc)-1\r\n                 loc= box_loc\r\n                 \r\n            }\r\n            const newData = this.state.items.slice(0);\r\n            newData.splice(loc, 0, {id:this.state.itemsCount,color:color,width:width,height:height,text:content,animation_class:''});\r\n           \r\n            this.setState({\r\n                //items: [...this.state.items,{id:this.state.itemsCount,color:\"blue\",width:width,height:height,text:content}],\r\n                items:newData,\r\n                itemsCount:this.state.itemsCount+1,\r\n        \r\n            })\r\n\r\n        }else{\r\n\r\n            alert('Error');\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    onRemoveItemHandler = (event)=>{\r\n      \r\n        const arr = this.state.items;\r\n        var item_index=-1;\r\n        for(var i = 0; i < arr.length; i++) {\r\n            if(arr[i]['id'] === this.state.confirm_id) {\r\n                item_index = i;\r\n            }\r\n        }\r\n\r\n        arr[item_index]={id:arr[item_index]['id'],color:arr[item_index]['color'],width:arr[item_index]['width'],height:arr[item_index]['height'],text:arr[item_index]['text'],animation_class:'animate__animated animate__bounceOut'}\r\n\r\n       \r\n        this.setState({\r\n            items:arr\r\n        })\r\n        \r\n        setTimeout(() => {\r\n           \r\n            this.setState({items:this.state.items.filter(it => it.id !== this.state.confirm_id)})\r\n\r\n        }, 800);\r\n\r\n    \r\n    }\r\n\r\n\r\n    onFilterItemHandler = (event)=>{\r\n       \r\n        const target = event.target;\r\n        this.setState({\r\n            box_color_filter:target.value,\r\n           \r\n        })\r\n        \r\n    }\r\n\r\n\r\n    filterReference= (props)=>{\r\n\r\n       if(this.state.box_color_filter==\"all\"){\r\n           return true\r\n       }else{\r\n            if(this.state.box_color_filter==props.color){\r\n                return true\r\n            }else{\r\n                return false\r\n            }\r\n        }\r\n       \r\n    }\r\n    \r\n   \r\n    render(){\r\n\r\n        // Children.\r\n        const children = this.state.items.map((item,index) => (\r\n            <Item\r\n                key={item.id}\r\n                color={item.color}\r\n                id={item.id}\r\n                width={item.width}\r\n                height={item.height}\r\n                text={item.text}\r\n                loc={index}\r\n                animation_class={item.animation_class}\r\n                remove = {() => this.setState({confirm_id:item.id})}\r\n                \r\n            />\r\n        ));\r\n  \r\n\r\n        return <><div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\" style={{borderRight:'1px solid #eee'}}>\r\n                        \r\n                            <AddItemOnLocation onFormFieldChangeHandler={this.onFormFieldChangeHandler} onAddItemHandler={this.onAddItemHandler} av_item= {this.state.items.length+1}/>\r\n                           {/* <hr/>\r\n                            <Button onClick={this.addItem} />\r\n                           */}\r\n                                \r\n                        </div>\r\n                        \r\n                        <div className=\"col-10\">\r\n                            <div className=\"row\" style={{padding:20,borderBottom:'1px solid #eee'}}>\r\n\r\n\r\n                                    \r\n                                    <label >\r\n                                        Filter : &nbsp;\r\n                                    </label>\r\n                                    <select class=\"form-control col-md-3\" name=\"color_filter\" onChange={this.onFilterItemHandler}>\r\n                                        <option value =\"all\">All</option>\r\n                                        <option value =\"orange\">Orange</option>\r\n                                        <option value =\"green\">Green</option>\r\n                                        <option value =\"blue\">Blue</option>\r\n                                        <option value =\"red\">Red</option>\r\n                                        <option value =\"white\">White</option>\r\n                                        <option value =\"black\">Black</option>\r\n                                    </select>\r\n                                    \r\n\r\n                            </div>\r\n                        \r\n                            <Demo>\r\n                              \r\n                                <MuuriComponent\r\n                                    id={'muuri_id'}\r\n                                    dragEnabled\r\n                                    dragStartPredicate={{ handle: \".content-header\" }}\r\n                                    propsToData={({color}) => ({color})}\r\n                                    filter={this.filterReference}\r\n                                >\r\n                                {children}\r\n                                </MuuriComponent>\r\n\r\n                                \r\n                            </Demo>\r\n\r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n                <div className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                        <div className=\"modal-dialog modal-dialog-centered \" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">Confirm Deletion</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <p>Are you sure you want to remove this item ?</p>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\r\n                                &nbsp;&nbsp;<button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={this.onRemoveItemHandler}>Yes</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n// Item component.\r\nconst Item= ResizableWrapper2();\r\n\r\nfunction oneOf(array) {\r\n    return array[Math.floor(Math.random() * Math.floor(array.length))];\r\n  }\r\n\r\nconst initialItems = (no_item) =>{\r\n    const item_arr = [];\r\n    for (let i = 0; i < no_item; i++) {\r\n        const color = oneOf([\"orange\", \"green\", \"blue\",\"white\",\"red\",\"black\"]);\r\n        item_arr.push( {id:i,color:color,width:195,height:195,text:'drag header!', });\r\n    }\r\n    return item_arr\r\n    \r\n  }\r\n  \r\n\r\n\r\n  const AddItemOnLocation = (props)=>{\r\n\r\n    var div_style={\r\n        background: '#fff',\r\n        padding:10,\r\n        \r\n    }\r\n  \r\n    var str =<><br/>\r\n        <div style={div_style}>\r\n            <h5>Add New Card</h5>\r\n            <hr/>\r\n          <form onSubmit={props.onAddItemHandler}>\r\n              \r\n                <div className=\"form-group\">\r\n                    <label >Text</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"box_content\" placeholder=\"Text\" onChange={props.onFormFieldChangeHandler} required/>\r\n                 </div>\r\n                \r\n                 <div className=\"form-group\">\r\n                    <label >Width (px)</label>\r\n                    <input type=\"number\" className=\"form-control\" name=\"box_width\" placeholder=\"Width\"  onChange={props.onFormFieldChangeHandler} min=\"100\" max=\"900\" required/>\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                    <label >Height (px)</label>\r\n                    <input type=\"number\" className=\"form-control\" name=\"box_height\" placeholder=\"Height\"  onChange={props.onFormFieldChangeHandler} min=\"100\" max=\"800\" required/>\r\n                 </div>\r\n\r\n                 <div className=\"form-group\">\r\n                    <label>Position</label>&nbsp;<span tooltip={`Add card at a specific position between 1 to ${props.av_item}. Default position is next to last card `} flow=\"up\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i></span>\r\n                    <input type=\"number\" className=\"form-control\" name=\"box_loc\" placeholder=\"Position\"  onChange={props.onFormFieldChangeHandler} min=\"1\" />\r\n                 </div>\r\n\r\n                 <div className=\"form-group\">\r\n                        <label >Background Color</label>\r\n                        <select className=\"form-control\" id=\"box_color\" name=\"box_color\" onChange={props.onFormFieldChangeHandler}>\r\n                            <option value =\"orange\">orange</option>\r\n                            <option value =\"green\">green</option>\r\n                            <option value =\"blue\">blue</option>\r\n                            <option value =\"red\">red</option>\r\n                            <option value =\"white\">white</option>\r\n                            <option value =\"black\">black</option>\r\n                        </select>\r\n                </div>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Add Crad !</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n  \r\n    return str\r\n  \r\n  }\r\n  \r\n  \r\n\r\n  \r\n\r\n\r\nexport default NewGridMuuri;","import React from 'react'\r\n\r\n\r\nconst Navbar = () =>{ \r\n        var str = \r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bd-navbar\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <a className=\"navbar-brand\" href=\"/\">React Grid</a>\r\n                <ul className=\"navbar-nav \">\r\n                    <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" href=\"#\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#/about\">About</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#/contact\">Contact</a>\r\n                    </li>\r\n                </ul>\r\n               </div>\r\n            </nav>\r\n\r\n        return (str)\r\n    \r\n}\r\n\r\n\r\nexport default Navbar\r\n\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MyMuuriGrid from './myMuuriGrid';\nimport CustomMuuriGrid from './CustomMuuriGrid';\nimport NewGridMuuri from './NewGridMuuri';\nimport Navbar from './Navbar';\nimport \"./style.css\";\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <NewGridMuuri/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}