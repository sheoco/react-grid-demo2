{"version":3,"sources":["logo.svg","myComponent.js","myMuuriGrid.js","CustomMuuriGrid.js","NewGridMuuri.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ResizableWrapper2","props","ref","useRef","refresh","useRefresh","refreshWithdebounce","debounce","requestAnimationFrame","className","style","width","height","animation_class","minConstraints","onResize","_","size","current","zIndex","onResizeStop","color","title","text","onClick","edit","data-toggle","data-target","class","aria-hidden","remove","Demo","children","Component","ResizableWrapper","id","NewGridMuuri","addItem","setState","items","state","itemsCount","onFormFieldChangeHandler","event","target","name","value","onAddItemHandler","box_content","box_width","box_height","box_title","content","parseInt","box_color","loc","box_loc","newData","slice","splice","alert","preventDefault","onRemoveItemHandler","arr","item_index","i","length","confirm_id","setTimeout","filter","it","onFilterItemHandler","updateFilterReference","color_filter","box_color_filter","toLowerCase","title_filter","box_title_filter","isFilterMatch","isSearchMatch","indexOf","onUpdateCard","update_box_color","update_box_title","update_box_content","onSend","initialItems","drag_items","initialItems2","bind","this","filterReference","map","item","index","key","Item2","borderRight","av_item","padding","borderBottom","type","placeholder","aria-label","onChange","dragEnabled","dragStartPredicate","handle","propsToData","tabIndex","role","data-dismiss","required","React","Item","oneOf","array","Math","floor","random","no_item","item_arr","push","item_arr2","AddItemOnLocation","background","onSubmit","min","max","tooltip","flow","Navbar","aria-controls","aria-expanded","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a150a856.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useRef } from \"react\";\r\nimport { useRefresh } from \"muuri-react\";\r\nimport { ResizableBox } from \"react-resizable\";\r\nimport { debounce } from \"underscore\";\r\n\r\n// Item component.\r\nexport const ResizableWrapper = (Component, { width, height }) => {\r\n  // Return the wrapped resizable component.\r\n  return function WrappedComponent(props) {\r\n    // Muuri-react provides all the tools to manage scaling.\r\n    // You can implement it however you want.\r\n    const ref = useRef();\r\n    const refresh = useRefresh();\r\n    // Get the best performance with debouncing.\r\n    // It is not mandatory to use.\r\n    const refreshWithdebounce = debounce(\r\n      () => requestAnimationFrame(refresh),\r\n      50\r\n    );\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className=\"item\"\r\n        style={{ width: `${width}px`, height: `${height}px` }}\r\n      >\r\n        <div className=\"muuri-item\">\r\n          {/* React-resizable is used to handle the resizing. */}\r\n          <ResizableBox\r\n            width={width}\r\n            height={height}\r\n            minConstraints={[width, height]}\r\n            onResize={(_, { size }) => {\r\n              ref.current.style.width = size.width + \"px\";\r\n              ref.current.style.height = size.height + \"px\";\r\n\r\n              refreshWithdebounce();\r\n            }}\r\n          >\r\n            <Component {...props} />\r\n          </ResizableBox>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const ResizableWrapper2=(props)=>{\r\n    {\r\n        // Return the wrapped resizable component.\r\n        return function WrappedComponent(props) {\r\n          // Muuri-react provides all the tools to manage scaling.\r\n          // You can implement it however you want.\r\n          const ref = useRef();\r\n          const refresh = useRefresh();\r\n          // Get the best performance with debouncing.\r\n          // It is not mandatory to use.\r\n          const refreshWithdebounce = debounce(\r\n            () => requestAnimationFrame(refresh),\r\n            50\r\n          );\r\n      \r\n          return (\r\n            <div\r\n              ref={ref}\r\n              className=\"item \"\r\n              style={{ width: `${props.width}px`, height: `${props.height}px`}}\r\n\r\n            >\r\n              <div className={`muuri-item ${props.animation_class}`}>\r\n                {/* React-resizable is used to handle the resizing. */}\r\n                <ResizableBox\r\n                  width={props.width}\r\n                  height={props.height}\r\n                  minConstraints={[100, 100]}\r\n                  onResize={(_, { size }) => {\r\n                    ref.current.style.width = size.width + \"px\";\r\n                    ref.current.style.height = size.height + \"px\";\r\n                    ref.current.style.zIndex = 3;\r\n                    \r\n\r\n                    refreshWithdebounce();\r\n                  }}\r\n                  onResizeStop={(_)=>{\r\n                    ref.current.style.zIndex = '';\r\n                  }}\r\n\r\n                >\r\n                    <div className={`content ${props.color}`}>\r\n                      <div className=\"content-header\" >{props.title} </div>\r\n                  \r\n                      <div className=\"div_center\">\r\n                        <p className=\"div_center_content\">{props.text}</p>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <span className=\"editSpan\"  onClick={props.edit} data-toggle=\"modal\" data-target=\"#exampleModal2\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></span>\r\n                \r\n                    <span className=\"removeSpan\"  onClick={props.remove} data-toggle=\"modal\" data-target=\"#exampleModal\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></span>\r\n                \r\n                </ResizableBox>\r\n              </div>\r\n            </div>\r\n          );\r\n        };\r\n      };\r\n      \r\n  } \r\n\r\n\r\n  export const ResizableWrapper3=(props)=>{\r\n    {\r\n        // Return the wrapped resizable component.\r\n        return function WrappedComponent(props) {\r\n          // Muuri-react provides all the tools to manage scaling.\r\n          // You can implement it however you want.\r\n          const ref = useRef();\r\n          const refresh = useRefresh();\r\n          // Get the best performance with debouncing.\r\n          // It is not mandatory to use.\r\n          const refreshWithdebounce = debounce(\r\n            () => requestAnimationFrame(refresh),\r\n            50\r\n          );\r\n      \r\n          return (\r\n            <div\r\n              ref={ref}\r\n              className=\"item \"\r\n              style={{ width: `${props.width}px`, height: `${props.height}px`}}\r\n\r\n            >\r\n              <div className={`muuri-item ${props.animation_class}`}>\r\n                {/* React-resizable is used to handle the resizing. */}\r\n                <ResizableBox\r\n                  width={props.width}\r\n                  height={props.height}\r\n                  minConstraints={[100, 100]}\r\n                  onResize={(_, { size }) => {\r\n                    ref.current.style.width = size.width + \"px\";\r\n                    ref.current.style.height = size.height + \"px\";\r\n                    ref.current.style.zIndex = 3;\r\n                    \r\n\r\n                    refreshWithdebounce();\r\n                  }}\r\n                  onResizeStop={(_)=>{\r\n                    ref.current.style.zIndex = '';\r\n                  }}\r\n\r\n                >\r\n                    <div className={`content ${props.color}`}>\r\n                      <div className=\"content-header\" >{props.title} </div>\r\n                  \r\n                      <div className=\"div_center\">\r\n                        <p className=\"div_center_content\">{props.text}</p>\r\n                      </div>\r\n\r\n                    </div>\r\n                   \r\n                </ResizableBox>\r\n              </div>\r\n            </div>\r\n          );\r\n        };\r\n      };\r\n      \r\n  } \r\n\r\n\r\n\r\n// Header component.\r\nexport const Header = () => (\r\n  <React.Fragment>\r\n    <h2 className=\"section-title\">\r\n      <span>React Grid Demo</span>\r\n    </h2>\r\n    <h4 className=\"section-title\">\r\n      <div>\r\n        <h4>Resize the boxes</h4>\r\n      </div>\r\n    </h4>\r\n    <div className=\"controls cf\" />\r\n  </React.Fragment>\r\n);\r\n\r\n// Demo component.\r\nexport const Demo = ({ children }) => (\r\n  <section className=\"grid-demo\">{children}</section>\r\n);\r\n\r\n// Button component.\r\nexport const Button = ({ onClick }) => (\r\n  <button className=\"add-more-items btn btn-primary\" onClick={onClick}>\r\n    <i className=\"material-icons\">&#xE145;</i>\r\n    Add more items at end\r\n  </button>\r\n);\r\n\r\n// Footer component.\r\nexport const Footer = ({ children }) => (\r\n  <div className=\"grid-footer\">{children}</div>\r\n);\r\n","/* React */\r\nimport React, { useState } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n/* Muuri-react */\r\nimport { MuuriComponent } from \"muuri-react\";\r\n/* Utils & components */\r\nimport { Header, Demo, Footer, Button, ResizableWrapper } from \"./myComponent\";\r\nimport { generateItems } from \"./utils\";\r\n/* Style */\r\n\r\n\r\n// App.\r\nconst MyMuuriGrid = () => {\r\n  const [items, setItems] = useState(generateItems());\r\n\r\n  // Children.\r\n  const children = items.map(({ id, color }) => (\r\n    <Item \r\n      key={id} \r\n      color={color} \r\n      \r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Demo>\r\n      {/* Header */}\r\n      <Header />\r\n      {/* Content */}\r\n      <MuuriComponent\r\n        dragEnabled\r\n        dragStartPredicate={{ handle: \".content-header\" }}\r\n      >\r\n        {children}\r\n      </MuuriComponent>\r\n      {/* Footer */}\r\n      <Footer>\r\n        <Button onClick={() => setItems(items.concat(generateItems()))} />\r\n      </Footer>\r\n    </Demo>\r\n  );\r\n};\r\n\r\n// Item component.\r\nconst Item = ResizableWrapper(\r\n  ({ color,id }) => (\r\n    <div className={`content ${color}`}>\r\n      <div className=\"content-header\" />\r\n    </div>\r\n  ),\r\n  {\r\n    width: 200,\r\n    height: 100\r\n  }\r\n);\r\n\r\nexport default MyMuuriGrid;\r\n","import React, { useState } from \"react\";\r\nimport { MuuriComponent } from \"muuri-react\";\r\nimport { Header, Demo, Footer, Button, ResizableWrapper,ResizableWrapper2 } from \"./myComponent\";\r\n\r\n\r\n\r\n\r\nconst CustomMuuriGrid = ()=>{\r\n\r\n\r\n  const initialItems = (no_item) =>{\r\n    const items = [];\r\n    for (let i = 0; i < no_item; i++) {\r\n  \r\n        items.push( {id:i,color:\"blue\",width:200,height:200,text:'drag me!'});\r\n    }\r\n    return items\r\n    \r\n  }\r\n  \r\n  \r\n  const addItem = ()=> {\r\n    \r\n        setItems([...items, {id:itemsCount,color:\"blue\",width:200,height:200,text:'drag me!'}])\r\n        setItemsCount(itemsCount+1)\r\n  }\r\n      \r\n  const removeItem = (id) => {\r\n    alert('');\r\n     // setItems(items.filter(item => item.id !== id))\r\n      \r\n  }\r\n\r\n    const [items, setItems] = useState(initialItems(10));\r\n    const [itemsCount, setItemsCount] = useState(10);\r\n\r\n    // Children.\r\n    const children = items.map((item) => (\r\n      <Item\r\n          key={item.id}\r\n          color={item.color}\r\n          id={item.id}\r\n          width={item.width}\r\n          height={item.height}\r\n          text={item.text}\r\n          remove = {removeItem(item.id)}\r\n        />\r\n    ));\r\n\r\n\r\n        return <Demo>\r\n                    <Header />\r\n                    <MuuriComponent\r\n                        dragEnabled\r\n                        dragStartPredicate={{ handle: \".content-header\" }}\r\n                    >\r\n                    {children}\r\n                    </MuuriComponent>\r\n        \r\n                    <Footer>\r\n                    <Button onClick={addItem} />\r\n                    </Footer>\r\n                </Demo>\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n// Item component.\r\nconst Item= ResizableWrapper2();\r\n     \r\n\r\n\r\n\r\nconst AddCard = (props)=>{\r\n\r\n    var div_style={\r\n        background: '#fff',\r\n        padding:10,\r\n        \r\n    }\r\n\r\n    var str =<><br/>\r\n        <div style={div_style}>\r\n            <h5>Add New Card</h5>\r\n            <hr/>\r\n          <form onSubmit={props.onAddItemHandler}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">Text of card</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"box_content\" placeholder=\"Enter box text..\" onChange={props.onFormFieldChangeHandler} required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Y Axis of card (Row)</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_row\" placeholder=\"Enter y axis (Row)\"  onChange={props.onFormFieldChangeHandler} min=\"0\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">X Axis of card (Column)</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_col\" placeholder=\"Enter x axis (Col)\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"12\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Width of card</label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_width\" placeholder=\"Enter width\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"12\" required/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                    <label for=\"\">Height of card </label>\r\n                    <input type=\"number\" class=\"form-control\" name=\"box_height\" placeholder=\"Enter height\"  onChange={props.onFormFieldChangeHandler} min=\"0\" max=\"6\" required/>\r\n                 </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-primary btn-block\">Add Crad !</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n\r\n    return str\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  \r\nexport default CustomMuuriGrid;","import React from \"react\";\r\nimport { MuuriComponent } from \"muuri-react\";\r\nimport { Header, Demo, Footer, Button, ResizableWrapper,ResizableWrapper2,ResizableWrapper3 } from \"./myComponent\";\r\n\r\n\r\nclass NewGridMuuri extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n                items:initialItems(10),\r\n                itemsCount:10,\r\n                box_title:'',\r\n                box_content:'',\r\n                box_loc:'',\r\n                box_width:'',\r\n                box_height:'',\r\n                box_color:'orange',\r\n                confirm_id:0,\r\n                box_color_filter:'all',\r\n                box_title_filter:'',\r\n                drag_items:initialItems2(3),\r\n                update_box_title:'',\r\n                update_box_content:'',\r\n                update_box_color:'',\r\n        }\r\n\r\n \r\n        this.addItem = this.addItem.bind(this)\r\n\r\n        this.onFormFieldChangeHandler = this.onFormFieldChangeHandler.bind(this)\r\n        this.onAddItemHandler = this.onAddItemHandler.bind(this)\r\n        this.onRemoveItemHandler = this.onRemoveItemHandler.bind(this)\r\n        this.onFilterItemHandler = this.onFilterItemHandler.bind(this)\r\n        this.updateFilterReference =this.updateFilterReference.bind(this)\r\n        this.onUpdateCard =this.onUpdateCard.bind(this)\r\n        this.onSend=this.onSend.bind(this)\r\n    }\r\n\r\n    addItem = ()=> {\r\n\r\n    \r\n        this.setState({\r\n            items: [...this.state.items, {id:this.state.itemsCount,color:\"blue\",width:200,height:200,text:'drag me!'}]\r\n        })\r\n            \r\n        this.setState({itemsCount:this.state.itemsCount+1})\r\n        \r\n    }\r\n\r\n    onFormFieldChangeHandler = (event)=>{\r\n        \r\n        const target = event.target;\r\n        this.setState({\r\n\t\t\t[target.name]:target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onAddItemHandler = (event)=>{\r\n\r\n        if(this.state.box_content !=='' && this.state.box_width !=='' && this.state.box_height !=='')\r\n        {\r\n            var title = this.state.box_title\r\n            const content = this.state.box_content\r\n            const width = parseInt(this.state.box_width)\r\n            const height = parseInt(this.state.box_height)\r\n            const color = this.state.box_color\r\n            var loc = this.state.itemsCount\r\n            if(this.state.box_loc!=\"\"){\r\n                 var box_loc = parseInt(this.state.box_loc)-1\r\n                 loc= box_loc\r\n                 \r\n            }\r\n            if(title==\"\"){\r\n                title=\"Title \"+(this.state.itemsCount+1)\r\n            }\r\n            const newData = this.state.items.slice(0);\r\n            newData.splice(loc, 0, {id:this.state.itemsCount,color:color,width:width,height:height,text:content,title:title,animation_class:''});\r\n           \r\n            this.setState({\r\n                //items: [...this.state.items,{id:this.state.itemsCount,color:\"blue\",width:width,height:height,text:content}],\r\n                items:newData,\r\n                itemsCount:this.state.itemsCount+1,\r\n        \r\n            })\r\n\r\n        }else{\r\n\r\n            alert('Error');\r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    onRemoveItemHandler = (event)=>{\r\n      \r\n        const arr = this.state.items;\r\n        var item_index=-1;\r\n        for(var i = 0; i < arr.length; i++) {\r\n            if(arr[i]['id'] === this.state.confirm_id) {\r\n                item_index = i;\r\n            }\r\n        }\r\n        // add animation on deleted element\r\n        arr[item_index]={id:arr[item_index]['id'],color:arr[item_index]['color'],width:arr[item_index]['width'],height:arr[item_index]['height'],title:arr[item_index]['title'],text:arr[item_index]['text'],animation_class:'animate__animated animate__bounceOut'}\r\n\r\n       \r\n        this.setState({\r\n            items:arr\r\n        })\r\n        \r\n        setTimeout(() => {\r\n           \r\n            this.setState({items:this.state.items.filter(it => it.id !== this.state.confirm_id)})\r\n\r\n        }, 800);\r\n\r\n    \r\n    }\r\n\r\n    onFilterItemHandler = (event)=>{\r\n       \r\n        const target = event.target;\r\n        this.setState({\r\n            [target.name]:target.value\r\n           \r\n        })\r\n         \r\n        this.updateFilterReference()\r\n    }\r\n\r\n\r\n    filter= (props)=>{\r\n\r\n        const color_filter = this.state.box_color_filter.toLowerCase();\r\n        const title_filter = this.state.box_title_filter;\r\n\r\n        var isFilterMatch = color_filter === \"all\" ? true : props.color === color_filter;\r\n\r\n        var isSearchMatch = !title_filter ? true : props.title.toLowerCase().indexOf(title_filter) > -1;\r\n\r\n         return isFilterMatch && isSearchMatch\r\n    }\r\n\r\n    updateFilterReference() {\r\n        \r\n        this.filterReference = (props) => this.filter(props);\r\n    }\r\n    \r\n    onUpdateCard=()=>{\r\n\r\n        const arr = this.state.items;\r\n        var item_index=-1;\r\n        for(var i = 0; i < arr.length; i++) {\r\n            if(arr[i]['id'] === this.state.confirm_id) {\r\n                item_index = i;\r\n            }\r\n        }\r\n\r\n         // add animation on deleted element\r\n         arr[item_index]={id:arr[item_index]['id'],color:this.state.update_box_color,width:arr[item_index]['width'],height:arr[item_index]['height'],title:this.state.update_box_title,text:this.state.update_box_content,animation_class:'animate__animated animate__tada'}\r\n\r\n\r\n       \r\n         this.setState({\r\n             items:arr\r\n         })\r\n\r\n    }\r\n\r\n    onSend=()=>{\r\n        alert('')\r\n    }\r\n    \r\n    render(){\r\n\r\n        // Children.\r\n        const children = this.state.items.map((item,index) => (\r\n            <Item\r\n                key={item.id}\r\n                color={item.color}\r\n                id={item.id}\r\n                width={item.width}\r\n                height={item.height}\r\n                text={item.text}\r\n                title={item.title}\r\n                loc={index}\r\n                animation_class={item.animation_class}\r\n                remove = {() => this.setState({confirm_id:item.id})}\r\n                edit ={() => this.setState({confirm_id:item.id,update_box_title:item.title,update_box_content:item.text,update_box_color:item.color})}\r\n              \r\n                \r\n            />\r\n        ));\r\n  \r\n        const children2 =  this.state.drag_items.map((item,index) => (\r\n            <Item2\r\n                key={item.id}\r\n                color={item.color}\r\n                id={item.id}\r\n                width={item.width}\r\n                height={item.height}\r\n                text={item.text}\r\n                title={item.title}\r\n                loc={index}\r\n                animation_class={item.animation_class}\r\n    \r\n                 \r\n            />\r\n        ));\r\n    \r\n       \r\n\r\n        return <><div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\" style={{borderRight:'1px solid #eee'}}>\r\n                        \r\n                            <AddItemOnLocation onFormFieldChangeHandler={this.onFormFieldChangeHandler} onAddItemHandler={this.onAddItemHandler} av_item= {this.state.items.length+1} drag_items={this.state.drag_items}/>\r\n                           {/* <hr/>\r\n                            <Button onClick={this.addItem} />\r\n                           */}\r\n                                \r\n                        </div>\r\n                        \r\n                        <div className=\"col-10\">\r\n\r\n                        <Demo>\r\n                            <div className=\"row\" style={{padding:18,borderBottom:'1px solid #eee'}}>\r\n                                <label>FILTER &nbsp;&nbsp; | &nbsp;&nbsp;</label> \r\n\r\n                                 <label> Title : &nbsp;</label> <input className=\"form-control col-md-2\"  name=\"box_title_filter\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.onFilterItemHandler}/>\r\n                                   \r\n                                \r\n                                    <label>\r\n                                    &nbsp;&nbsp; | &nbsp;&nbsp; Background Color : &nbsp;\r\n                                    </label>\r\n                                    <select className=\"form-control col-md-2\" name=\"box_color_filter\" onChange={this.onFilterItemHandler}>\r\n                                        <option value =\"all\">All</option>\r\n                                        <option value =\"orange\">Orange</option>\r\n                                        <option value =\"green\">Green</option>\r\n                                        <option value =\"blue\">Blue</option>\r\n                                        <option value =\"red\">Red</option>\r\n                                        <option value =\"white\">White</option>\r\n                                        <option value =\"black\">Black</option>\r\n                                    </select>\r\n                                    \r\n                                   \r\n                            \r\n                                <div className=\"col-md-4\">\r\n                           \r\n                              {/*} <MuuriComponent\r\n                                      id={'muuri_id2'}\r\n                                      dragEnabled\r\n                                      dragStartPredicate={{ handle: \".content-header\" }}\r\n                                      onSend={this.onSend}\r\n                                     \r\n                                >\r\n                               {children2}\r\n\r\n                                </MuuriComponent>\r\n                                */}\r\n                                </div>\r\n\r\n                            </div>\r\n                               \r\n                                <MuuriComponent\r\n                                      id={'muuri_id'}\r\n                                      dragEnabled\r\n                                      dragStartPredicate={{ handle: \".content-header\" }}\r\n                                      propsToData={({color,title}) => ({color,title})}\r\n                                      filter={this.filterReference}\r\n                                >\r\n                               {children}\r\n\r\n                                </MuuriComponent>\r\n\r\n                                \r\n\r\n                                \r\n                            </Demo>\r\n\r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n                <div className=\"modal\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                        <div className=\"modal-dialog modal-dialog-centered \" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">Confirm Deletion</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <p>Are you sure you want to remove this item ?</p>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\r\n                                &nbsp;&nbsp;<button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={this.onRemoveItemHandler}>Yes</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                <div className=\"modal\" id=\"exampleModal2\" tabIndex=\"-1\" role=\"dialog\">\r\n                        <div className=\"modal-dialog modal-dialog-centered \" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">Update Card</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label >Title</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"update_box_title\" placeholder=\"Title\" value={this.state.update_box_title} onChange={this.onFormFieldChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label >Content</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"update_box_content\" placeholder=\"Content\" value={this.state.update_box_content} onChange={this.onFormFieldChangeHandler} required/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                            <label >Background Color</label>\r\n                                            <select className=\"form-control\" id=\"box_color\" name=\"update_box_color\"  onChange={this.onFormFieldChangeHandler}>\r\n                                            \r\n                                                <option value ={this.state.update_box_color}>{this.state.update_box_color}</option>\r\n                                                <option value =\"orange\">Orange</option>\r\n                                                <option value =\"green\">Green</option>\r\n                                                <option value =\"blue\">Blue</option>\r\n                                                <option value =\"red\">Red</option>\r\n                                                <option value =\"white\">White</option>\r\n                                                <option value =\"black\">Black</option>\r\n                                            </select>\r\n                                    </div>\r\n                \r\n                               \r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                                &nbsp;&nbsp;<button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\" onClick={this.onUpdateCard}>Update</button>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n\r\n                </>\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n// Item component.\r\nconst Item= ResizableWrapper2();\r\n\r\n// Item component.\r\nconst Item2= ResizableWrapper3();\r\n\r\nfunction oneOf(array) {\r\n    return array[Math.floor(Math.random() * Math.floor(array.length))];\r\n}\r\n\r\nconst initialItems = (no_item) =>{\r\n    const item_arr = [];\r\n    for (let i = 0; i < no_item; i++) {\r\n        const color = oneOf([\"orange\", \"green\", \"blue\",\"white\",\"red\",\"black\"]);\r\n        item_arr.push( {id:i,color:color,width:195,height:195,text:'Content !!', title:'Title '+(i+1),animation_class:''});\r\n    }\r\n    return item_arr\r\n}\r\n\r\nconst initialItems2 = (no_item) =>{\r\n    const item_arr2 = [];\r\n    for (let i = 500; i < no_item+500; i++) {\r\n        const color = oneOf([\"orange\", \"green\", \"blue\",\"white\",\"red\",\"black\"]);\r\n        item_arr2.push( {id:i,color:color,width:40,height:40,text:'', title:' ',animation_class:''});\r\n    }\r\n    return item_arr2\r\n}\r\n\r\n\r\nconst AddItemOnLocation = (props)=>{\r\n\r\n    var div_style={\r\n        background: '#fff',\r\n        padding:10,\r\n        \r\n    }\r\n\r\n   \r\n   \r\n  \r\nvar str =<><br/>\r\n\r\n\r\n        <div style={div_style}>\r\n            <h5>Add New Card</h5>\r\n            <hr/>\r\n          <form onSubmit={props.onAddItemHandler}>\r\n              \r\n                <div className=\"form-group\">\r\n                    <label >Title</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"box_title\" placeholder=\"Title\" onChange={props.onFormFieldChangeHandler} />\r\n                 </div>\r\n                <div className=\"form-group\">\r\n                    <label >Content</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"box_content\" placeholder=\"Content\" onChange={props.onFormFieldChangeHandler} required/>\r\n                 </div>\r\n                \r\n                 <div className=\"form-group\">\r\n                    <label >Width (px)</label>\r\n                    <input type=\"number\" className=\"form-control\" name=\"box_width\" placeholder=\"Width\"  onChange={props.onFormFieldChangeHandler} min=\"100\" max=\"900\" required/>\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                    <label >Height (px)</label>\r\n                    <input type=\"number\" className=\"form-control\" name=\"box_height\" placeholder=\"Height\"  onChange={props.onFormFieldChangeHandler} min=\"100\" max=\"800\" required/>\r\n                 </div>\r\n\r\n                 <div className=\"form-group\">\r\n                    <label>Position</label>&nbsp;<span tooltip={`Add card at a specific position between 1 to ${props.av_item}. Default position is next to last card `} flow=\"up\"><i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i></span>\r\n                    <input type=\"number\" className=\"form-control\" name=\"box_loc\" placeholder=\"Position\"  onChange={props.onFormFieldChangeHandler} min=\"1\" />\r\n                 </div>\r\n\r\n                 <div className=\"form-group\">\r\n                        <label >Background Color</label>\r\n                        <select className=\"form-control\" id=\"box_color\" name=\"box_color\" onChange={props.onFormFieldChangeHandler}>\r\n                            <option value =\"orange\">Orange</option>\r\n                            <option value =\"green\">Green</option>\r\n                            <option value =\"blue\">Blue</option>\r\n                            <option value =\"red\">Red</option>\r\n                            <option value =\"white\">White</option>\r\n                            <option value =\"black\">Black</option>\r\n                        </select>\r\n                </div>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Add Crad !</button>\r\n            </form>\r\n        </div>\r\n    </>\r\n  \r\n    return str\r\n  \r\n}\r\n  \r\n  \r\n\r\n  \r\n\r\n\r\nexport default NewGridMuuri;","import React from 'react'\r\n\r\n\r\nconst Navbar = () =>{ \r\n        var str = \r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bd-navbar\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <a className=\"navbar-brand\" href=\"/\">React Grid</a>\r\n                <ul className=\"navbar-nav \">\r\n                    <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" href=\"#\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#/about\">About</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#/contact\">Contact</a>\r\n                    </li>\r\n                </ul>\r\n               </div>\r\n            </nav>\r\n\r\n        return (str)\r\n    \r\n}\r\n\r\n\r\nexport default Navbar\r\n\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MyMuuriGrid from './myMuuriGrid';\nimport CustomMuuriGrid from './CustomMuuriGrid';\nimport NewGridMuuri from './NewGridMuuri';\nimport Navbar from './Navbar';\nimport \"./style.css\";\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <NewGridMuuri/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);*/\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}